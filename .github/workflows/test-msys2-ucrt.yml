# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: test-msys2-ucrt

on: [workflow_dispatch, pull_request]

jobs:
  job:
    name: ${{ matrix.env }}-${{ matrix.cxx }}-asyncappender-multithreading
    runs-on: windows-2022
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        name: [ ucrt64-clang, ucrt64-gnu ]
        include:
        - name: ucrt64-clang
          sys: ucrt64
          env: ucrt-x86_64
          compiler-package: clang
          cxx: clang++
        - name: ucrt64-gnu
          sys: ucrt64
          env: ucrt-x86_64
          compiler-package: gcc
          cxx: g++

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: >-
          git
          mingw-w64-${{ matrix.env }}-${{ matrix.compiler-package }}
          mingw-w64-${{ matrix.env }}-ccmake
          mingw-w64-${{ matrix.env }}-ninja
          mingw-w64-${{ matrix.env }}-apr-util
          sed
          zip
          mingw-w64-${{ matrix.env }}-gdb

    - uses: actions/checkout@v4
      with:
        persist-credentials: false # do not persist auth token in the local git config
        path: log4cxx

    - name: 'configure and build'
      shell: msys2 {0}
      run: |
        cmake -G Ninja -S log4cxx -B log4cxx/build -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} -DCMAKE_BUILD_TYPE=Debug
        cmake --build log4cxx/build -t asyncappendertestcase.exe

    - name: 'test asyncappender multithreading'
      shell: msys2 {0}
      run: |
        wmic cpu get caption, deviceid, name, numberofcores, maxclockspeed, status
        test_exe=`pwd`/log4cxx/build/src/test/cpp/asyncappendertestcase.exe
        export PATH=`pwd`/log4cxx/build/src/main/cpp:$PATH
        cd log4cxx/src/test/resources
        for i in {1..150}
        do
        $test_exe testMultiThread &
        test_pid=$!
        test_winpid=`ps -W -p $test_pid | grep '^ *[0-9]' | sed -E 's/ *[0-9]+ +[0-9]+ +[0-9]+ +([0-9]+).*/\1/'`
        sleep 5s
        if ps -p $test_pid > /dev/null; then
           gdb $test_exe --pid=$test_winpid <<EOT
        info threads
        thread apply all backtrace
        EOT
          sleep 5s
          if ps -p $test_pid > /dev/null; then
              echo "asyncappender is deadlocked!!"
              kill $test_pid
              break
          else
              echo "asyncappender terminated OK"
          fi
        fi
        done
